{"version":3,"sources":["components/LoginPage/Login.js","components/SignupPage/AccountFilter.js","components/SignupPage/BusinessForm.js","components/SignupPage/HealthProfessionalForm.js","components/SignupPage/PersonalUserForm.js","firebase.js","components/SignupPage/SignupPage.js","components/HealthProfessionalPage/UserInfoForm.js","components/HealthProfessionalPage/MainPage.js","components/LoginPage/UserInput.js","App.js","index.js"],"names":["Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","e","target","onClick","AccountFilter","select","event","onSelectAccountType","disabled","selected","BusinessForm","useState","name","setName","ein","setEin","street1","setStreet1","street2","setStreet2","city","setCity","state","setState","postalCode","setPostalCode","emailAddress","setEmailAddress","onSubmit","preventDefault","accountInfo","address","onSignup","placeholder","abbreviation","map","HealthProfessionalForm","fullName","setFullName","nip","setNip","PersonalUserForm","enteredName","setEnteredName","enteredDateOfBirth","setEnteredDateOfBirth","enteredEmailAddress","setEnteredEmailAddress","enteredPassword","setEnteredPassword","dateOfBirth","Date","numVac","imageUrl","console","log","min","max","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","SignupPage","accountType","setAccountType","setEmailError","setPasswordError","userTypes","isPersonalUser","isBusiness","isHealthProfessional","createDoc","newAccountInfo","a","collection","doc","userId","set","createUserWithEmailAndPassword","then","data","personalUserAccountInfo","user","uid","userType","businessAccountInfo","businessAccountSignupHandler","healthProfessionalAccountInfo","healthProfessionalAccountSignupHandler","handleSignupSuccess","catch","err","code","message","selectedAccountType","UserInfoForm","forwardRef","ref","imageAsFile","setImageAsFile","imgUrl","setImageAsUrl","userData","setImageUrl","toDate","toISOString","split","enteredNumberOfVaccinations","setEnteredNumberOfVaccinations","useEffect","useImperativeHandle","updateImageUrl","child","getDownloadURL","fireBaseUrl","error","put","on","snapShot","prevObject","modifiedAccountInfo","onModifyPatient","src","alt","image","files","imageFile","parseInt","MainPage","childRef","useRef","setCurrentUser","searchedUser","setSearchedUser","searchedUserId","setSearchedUserId","doesPatientExist","setDoesPatientExist","isModificationSuccessful","setIsModificationSuccessful","onAuthStateChanged","where","get","result","docs","forEach","handleLogout","fetchSignInMethodsForEmail","providers","length","alert","id","newPatientInfo","current","UserInput","history","useHistory","setUser","authListener","exact","path","component","handleLogOut","signOut","signInWithEmailAndPassword","push","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cadb47b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Login.css\";\n\nconst Login = (props) => {\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleLogin,\n    handleSignup,\n    hasAccount,\n    setHasAccount,\n    emailError,\n    passwordError,\n  } = props;\n\n  return (\n    <section className=\"login\">\n      <div className=\"loginContainer\">\n        <label>Email</label>\n        <input\n          type=\"text\"\n          autoFocus\n          required\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <p className=\"ErrorMsg\">{emailError}</p>\n        <label>Password</label>\n        <input\n          type=\"password\"\n          required\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <p className=\"ErrorMsg\">{passwordError}</p>\n\n        <div className=\"btnContainer\">\n          {hasAccount ? ( //if true\n            <>\n              <button onClick={handleLogin}>Sign in</button>\n              <p>\n                Don't have an account?\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign up</span>\n              </p>\n            </>\n          ) : (\n            //if false\n            <>\n              <button onClick={handleSignup}>Sign up</button>\n              <p>\n                Have an account?\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign in</span>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n","const AccountFilter = (props) => {\n  const selectChangeHandler = (event) => {\n    props.onSelectAccountType(event.target.value);\n  };\n\n  return (\n    <div>\n      <label>Choose your account type</label>\n      <select value={props.select} onChange={selectChangeHandler}>\n        <option value=\"\" disabled selected></option>\n        <option value=\"PersonalUser\">Personal User</option>\n        <option value=\"Business\">Business</option>\n        <option value=\"HealthProfessional\">Health Professional</option>\n      </select>\n    </div>\n  );\n};\n\nexport default AccountFilter;\n","import { useState } from \"react\";\n\nconst BusinessForm = (props) => {\n  const states = [\n    {\n      name: \"Alabama\",\n      abbreviation: \"AL\",\n    },\n    {\n      name: \"Alaska\",\n      abbreviation: \"AK\",\n    },\n    {\n      name: \"American Samoa\",\n      abbreviation: \"AS\",\n    },\n    {\n      name: \"Arizona\",\n      abbreviation: \"AZ\",\n    },\n    {\n      name: \"Arkansas\",\n      abbreviation: \"AR\",\n    },\n    {\n      name: \"California\",\n      abbreviation: \"CA\",\n    },\n    {\n      name: \"Colorado\",\n      abbreviation: \"CO\",\n    },\n    {\n      name: \"Connecticut\",\n      abbreviation: \"CT\",\n    },\n    {\n      name: \"Delaware\",\n      abbreviation: \"DE\",\n    },\n    {\n      name: \"District Of Columbia\",\n      abbreviation: \"DC\",\n    },\n    {\n      name: \"Federated States Of Micronesia\",\n      abbreviation: \"FM\",\n    },\n    {\n      name: \"Florida\",\n      abbreviation: \"FL\",\n    },\n    {\n      name: \"Georgia\",\n      abbreviation: \"GA\",\n    },\n    {\n      name: \"Guam\",\n      abbreviation: \"GU\",\n    },\n    {\n      name: \"Hawaii\",\n      abbreviation: \"HI\",\n    },\n    {\n      name: \"Idaho\",\n      abbreviation: \"ID\",\n    },\n    {\n      name: \"Illinois\",\n      abbreviation: \"IL\",\n    },\n    {\n      name: \"Indiana\",\n      abbreviation: \"IN\",\n    },\n    {\n      name: \"Iowa\",\n      abbreviation: \"IA\",\n    },\n    {\n      name: \"Kansas\",\n      abbreviation: \"KS\",\n    },\n    {\n      name: \"Kentucky\",\n      abbreviation: \"KY\",\n    },\n    {\n      name: \"Louisiana\",\n      abbreviation: \"LA\",\n    },\n    {\n      name: \"Maine\",\n      abbreviation: \"ME\",\n    },\n    {\n      name: \"Marshall Islands\",\n      abbreviation: \"MH\",\n    },\n    {\n      name: \"Maryland\",\n      abbreviation: \"MD\",\n    },\n    {\n      name: \"Massachusetts\",\n      abbreviation: \"MA\",\n    },\n    {\n      name: \"Michigan\",\n      abbreviation: \"MI\",\n    },\n    {\n      name: \"Minnesota\",\n      abbreviation: \"MN\",\n    },\n    {\n      name: \"Mississippi\",\n      abbreviation: \"MS\",\n    },\n    {\n      name: \"Missouri\",\n      abbreviation: \"MO\",\n    },\n    {\n      name: \"Montana\",\n      abbreviation: \"MT\",\n    },\n    {\n      name: \"Nebraska\",\n      abbreviation: \"NE\",\n    },\n    {\n      name: \"Nevada\",\n      abbreviation: \"NV\",\n    },\n    {\n      name: \"New Hampshire\",\n      abbreviation: \"NH\",\n    },\n    {\n      name: \"New Jersey\",\n      abbreviation: \"NJ\",\n    },\n    {\n      name: \"New Mexico\",\n      abbreviation: \"NM\",\n    },\n    {\n      name: \"New York\",\n      abbreviation: \"NY\",\n    },\n    {\n      name: \"North Carolina\",\n      abbreviation: \"NC\",\n    },\n    {\n      name: \"North Dakota\",\n      abbreviation: \"ND\",\n    },\n    {\n      name: \"Northern Mariana Islands\",\n      abbreviation: \"MP\",\n    },\n    {\n      name: \"Ohio\",\n      abbreviation: \"OH\",\n    },\n    {\n      name: \"Oklahoma\",\n      abbreviation: \"OK\",\n    },\n    {\n      name: \"Oregon\",\n      abbreviation: \"OR\",\n    },\n    {\n      name: \"Palau\",\n      abbreviation: \"PW\",\n    },\n    {\n      name: \"Pennsylvania\",\n      abbreviation: \"PA\",\n    },\n    {\n      name: \"Puerto Rico\",\n      abbreviation: \"PR\",\n    },\n    {\n      name: \"Rhode Island\",\n      abbreviation: \"RI\",\n    },\n    {\n      name: \"South Carolina\",\n      abbreviation: \"SC\",\n    },\n    {\n      name: \"South Dakota\",\n      abbreviation: \"SD\",\n    },\n    {\n      name: \"Tennessee\",\n      abbreviation: \"TN\",\n    },\n    {\n      name: \"Texas\",\n      abbreviation: \"TX\",\n    },\n    {\n      name: \"Utah\",\n      abbreviation: \"UT\",\n    },\n    {\n      name: \"Vermont\",\n      abbreviation: \"VT\",\n    },\n    {\n      name: \"Virgin Islands\",\n      abbreviation: \"VI\",\n    },\n    {\n      name: \"Virginia\",\n      abbreviation: \"VA\",\n    },\n    {\n      name: \"Washington\",\n      abbreviation: \"WA\",\n    },\n    {\n      name: \"West Virginia\",\n      abbreviation: \"WV\",\n    },\n    {\n      name: \"Wisconsin\",\n      abbreviation: \"WI\",\n    },\n    {\n      name: \"Wyoming\",\n      abbreviation: \"WY\",\n    },\n  ];\n\n  const [name, setName] = useState(\"\");\n  // Company Identification Number\n  const [ein, setEin] = useState(\"\");\n  const [street1, setStreet1] = useState(\"\");\n  const [street2, setStreet2] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const nameChangeHandler = (event) => {\n    setName(event.target.value);\n  };\n\n  const einChangeHandler = (event) => {\n    setEin(event.target.value);\n  };\n\n  const street1ChangeHandler = (event) => {\n    setStreet1(event.target.value);\n  };\n\n  const street2ChangeHandler = (event) => {\n    setStreet2(event.target.value);\n  };\n\n  const cityChangeHandler = (event) => {\n    setCity(event.target.value);\n  };\n\n  const stateChangeHandler = (event) => {\n    setState(event.target.value);\n  };\n\n  const postalCodeChangeHandler = (event) => {\n    setPostalCode(event.target.value);\n  };\n\n  const emailAddressChangeHandler = (event) => {\n      setEmailAddress(event.target.value);\n  }\n\n  const passwordChangeHandler = (event) => {\n      setPassword(event.target.value);\n  }\n\n  const clearAccountInfo = () => {\n      setName(\"\");\n      setEin(\"\");\n      setStreet1(\"\");\n      setStreet2(\"\")\n      setCity(\"\");\n      setState(\"\");\n      setPostalCode(\"\");\n      setEmailAddress(\"\");\n      setPassword(\"\");\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    \n    const accountInfo = {\n        name: name,\n        ein: ein,\n        address: {\n            street1: street1,\n            street2: street2,\n            city: city,\n            state: state,\n            postalCode: postalCode\n        },\n        email: emailAddress,\n        password: password\n    }\n    clearAccountInfo();\n    props.onSignup(accountInfo);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"\">\n        <div className=\"\">\n          <label>Company Name</label>\n          <input type=\"text\" value={name} onChange={nameChangeHandler} />\n        </div>\n        <div className=\"\">\n          <label>Company Identification Number</label>\n          <input type=\"text\" value={ein} onChange={einChangeHandler} />\n        </div>\n        <div className=\"\">\n          <label>Business Address</label>\n          <input\n            type=\"text\"\n            value={street1}\n            onChange={street1ChangeHandler}\n            placeholder=\"Street Address 1\"\n          />\n          <input\n            type=\"text\"\n            value={street2}\n            onChange={street2ChangeHandler}\n            placeholder=\"Street Address 2\"\n          />\n          <input\n            type=\"text\"\n            value={city}\n            onChange={cityChangeHandler}\n            placeholder=\"City\"\n          ></input>\n          <select value={state} onChange={stateChangeHandler}>\n            <option value=\"\" disabled selected>\n              State\n            </option>\n            {states.map((state) => (\n              <option value={state.abbreviation}>{state.name}</option>\n            ))}\n          </select>\n          <input\n            type=\"number\"\n            value={postalCode}\n            onChange={postalCodeChangeHandler}\n            placeholder=\"Postal Code\"\n          />\n        </div>\n        <div>\n          <label>Email Address</label>\n          <input type=\"email\" value={emailAddress} onChange={emailAddressChangeHandler}/> \n        </div>\n        <div>\n          <label>Password</label>\n          <input type=\"password\" value={password} onChange={passwordChangeHandler}/>\n        </div>\n      </div>\n      <div>\n        <button type=\"submit\">Sign up</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BusinessForm;\n","import { useState } from \"react\";\n\nconst HealthProfessionalForm = (props) => {\n  const states = [\n    {\n      name: \"Alabama\",\n      abbreviation: \"AL\",\n    },\n    {\n      name: \"Alaska\",\n      abbreviation: \"AK\",\n    },\n    {\n      name: \"American Samoa\",\n      abbreviation: \"AS\",\n    },\n    {\n      name: \"Arizona\",\n      abbreviation: \"AZ\",\n    },\n    {\n      name: \"Arkansas\",\n      abbreviation: \"AR\",\n    },\n    {\n      name: \"California\",\n      abbreviation: \"CA\",\n    },\n    {\n      name: \"Colorado\",\n      abbreviation: \"CO\",\n    },\n    {\n      name: \"Connecticut\",\n      abbreviation: \"CT\",\n    },\n    {\n      name: \"Delaware\",\n      abbreviation: \"DE\",\n    },\n    {\n      name: \"District Of Columbia\",\n      abbreviation: \"DC\",\n    },\n    {\n      name: \"Federated States Of Micronesia\",\n      abbreviation: \"FM\",\n    },\n    {\n      name: \"Florida\",\n      abbreviation: \"FL\",\n    },\n    {\n      name: \"Georgia\",\n      abbreviation: \"GA\",\n    },\n    {\n      name: \"Guam\",\n      abbreviation: \"GU\",\n    },\n    {\n      name: \"Hawaii\",\n      abbreviation: \"HI\",\n    },\n    {\n      name: \"Idaho\",\n      abbreviation: \"ID\",\n    },\n    {\n      name: \"Illinois\",\n      abbreviation: \"IL\",\n    },\n    {\n      name: \"Indiana\",\n      abbreviation: \"IN\",\n    },\n    {\n      name: \"Iowa\",\n      abbreviation: \"IA\",\n    },\n    {\n      name: \"Kansas\",\n      abbreviation: \"KS\",\n    },\n    {\n      name: \"Kentucky\",\n      abbreviation: \"KY\",\n    },\n    {\n      name: \"Louisiana\",\n      abbreviation: \"LA\",\n    },\n    {\n      name: \"Maine\",\n      abbreviation: \"ME\",\n    },\n    {\n      name: \"Marshall Islands\",\n      abbreviation: \"MH\",\n    },\n    {\n      name: \"Maryland\",\n      abbreviation: \"MD\",\n    },\n    {\n      name: \"Massachusetts\",\n      abbreviation: \"MA\",\n    },\n    {\n      name: \"Michigan\",\n      abbreviation: \"MI\",\n    },\n    {\n      name: \"Minnesota\",\n      abbreviation: \"MN\",\n    },\n    {\n      name: \"Mississippi\",\n      abbreviation: \"MS\",\n    },\n    {\n      name: \"Missouri\",\n      abbreviation: \"MO\",\n    },\n    {\n      name: \"Montana\",\n      abbreviation: \"MT\",\n    },\n    {\n      name: \"Nebraska\",\n      abbreviation: \"NE\",\n    },\n    {\n      name: \"Nevada\",\n      abbreviation: \"NV\",\n    },\n    {\n      name: \"New Hampshire\",\n      abbreviation: \"NH\",\n    },\n    {\n      name: \"New Jersey\",\n      abbreviation: \"NJ\",\n    },\n    {\n      name: \"New Mexico\",\n      abbreviation: \"NM\",\n    },\n    {\n      name: \"New York\",\n      abbreviation: \"NY\",\n    },\n    {\n      name: \"North Carolina\",\n      abbreviation: \"NC\",\n    },\n    {\n      name: \"North Dakota\",\n      abbreviation: \"ND\",\n    },\n    {\n      name: \"Northern Mariana Islands\",\n      abbreviation: \"MP\",\n    },\n    {\n      name: \"Ohio\",\n      abbreviation: \"OH\",\n    },\n    {\n      name: \"Oklahoma\",\n      abbreviation: \"OK\",\n    },\n    {\n      name: \"Oregon\",\n      abbreviation: \"OR\",\n    },\n    {\n      name: \"Palau\",\n      abbreviation: \"PW\",\n    },\n    {\n      name: \"Pennsylvania\",\n      abbreviation: \"PA\",\n    },\n    {\n      name: \"Puerto Rico\",\n      abbreviation: \"PR\",\n    },\n    {\n      name: \"Rhode Island\",\n      abbreviation: \"RI\",\n    },\n    {\n      name: \"South Carolina\",\n      abbreviation: \"SC\",\n    },\n    {\n      name: \"South Dakota\",\n      abbreviation: \"SD\",\n    },\n    {\n      name: \"Tennessee\",\n      abbreviation: \"TN\",\n    },\n    {\n      name: \"Texas\",\n      abbreviation: \"TX\",\n    },\n    {\n      name: \"Utah\",\n      abbreviation: \"UT\",\n    },\n    {\n      name: \"Vermont\",\n      abbreviation: \"VT\",\n    },\n    {\n      name: \"Virgin Islands\",\n      abbreviation: \"VI\",\n    },\n    {\n      name: \"Virginia\",\n      abbreviation: \"VA\",\n    },\n    {\n      name: \"Washington\",\n      abbreviation: \"WA\",\n    },\n    {\n      name: \"West Virginia\",\n      abbreviation: \"WV\",\n    },\n    {\n      name: \"Wisconsin\",\n      abbreviation: \"WI\",\n    },\n    {\n      name: \"Wyoming\",\n      abbreviation: \"WY\",\n    },\n  ];\n\n  const [fullName, setFullName] = useState(\"\");\n  // National Provider Identifier\n  const [nip, setNip] = useState(\"\");\n  const [street1, setStreet1] = useState(\"\");\n  const [street2, setStreet2] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const fullNameChangeHandler = (event) => {\n    setFullName(event.target.value);\n  };\n\n  const nipChangeHandler = (event) => {\n    setNip(event.target.value);\n  };\n\n  const street1ChangeHandler = (event) => {\n    setStreet1(event.target.value);\n  };\n\n  const street2ChangeHandler = (event) => {\n    setStreet2(event.target.value);\n  };\n\n  const cityChangeHandler = (event) => {\n    setCity(event.target.value);\n  };\n\n  const stateChangeHandler = (event) => {\n    setState(event.target.value);\n  };\n\n  const postalCodeChangeHandler = (event) => {\n    setPostalCode(event.target.value);\n  };\n\n  const emailAddressChangeHandler = (event) => {\n    setEmailAddress(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const clearAccountInfo = () => {\n    setFullName(\"\");\n    setNip(\"\");\n    setStreet1(\"\");\n    setStreet2(\"\")\n    setCity(\"\");\n    setState(\"\");\n    setPostalCode(\"\");\n    setEmailAddress(\"\");\n    setPassword(\"\");\n}\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    \n    const accountInfo = {\n        name: fullName,\n        nip: nip,\n        address: {\n            street1: street1,\n            street2: street2,\n            city: city,\n            state: state,\n            postalCode: postalCode\n        },\n        email: emailAddress,\n        password: password\n    };\n\n    clearAccountInfo();\n    props.onSignup(accountInfo);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div>\n        <div>\n          <label>Full Name</label>\n          <input\n            type=\"text\"\n            value={fullName}\n            onChange={fullNameChangeHandler}\n          />\n        </div>\n        <div>\n          <label>National Provider Identifier</label>\n          <input type=\"text\" value={nip} onChange={nipChangeHandler} />\n        </div>\n        <div>\n          <label>Work Address</label>\n          <input\n            type=\"text\"\n            value={street1}\n            onChange={street1ChangeHandler}\n            placeholder=\"Street Address 1\"\n          />\n          <input\n            type=\"text\"\n            value={street2}\n            onChange={street2ChangeHandler}\n            placeholder=\"Street Address 2\"\n          />\n          <input\n            type=\"text\"\n            value={city}\n            onChange={cityChangeHandler}\n            placeholder=\"City\"\n          ></input>\n          <select value={state} onChange={stateChangeHandler}>\n            <option value=\"\" disabled selected>\n              State\n            </option>\n            {states.map((state) => (\n              <option value={state.abbreviation}>{state.name}</option>\n            ))}\n          </select>\n          <input\n            type=\"number\"\n            value={postalCode}\n            onChange={postalCodeChangeHandler}\n            placeholder=\"Postal Code\"\n          />\n        </div>\n        <div>\n          <label>Email Address</label>\n          <input type=\"email\" value={emailAddress} onChange={emailAddressChangeHandler}/> \n        </div>\n        <div>\n          <label>Password</label>\n          <input type=\"password\" value={password} onChange={passwordChangeHandler}/>\n        </div>\n      </div>\n      <div>\n        <button type=\"submit\">Sign up</button>\n      </div>\n    </form>\n  );\n};\n\nexport default HealthProfessionalForm;\n","import { useState } from \"react\";\n\nconst PersonalUserForm = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredDateOfBirth, setEnteredDateOfBirth] = useState(\"\");\n  const [enteredIdentityNumber, setEnteredIdentityNumber] = useState(\"\");\n  const [enteredEmailAddress, setEnteredEmailAddress] = useState(\"\");\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [\n    enteredNumberOfVaccinations,\n    setEnteredNumberOfVaccinations,\n  ] = useState(\"\");\n\n  const nameChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const dateOfBirthChangeHandler = (event) => {\n    setEnteredDateOfBirth(event.target.value);\n  };\n\n  const identityNumberChangeHandler = (event) => {\n    setEnteredIdentityNumber(event.target.value);\n  };\n\n  const enteredEmailAddressChangeHandler = (event) => {\n    setEnteredEmailAddress(event.target.value);\n  };\n\n  const enteredPasswordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const enteredNumberOfVaccinationsChangeHandler = (event) => {\n    setEnteredNumberOfVaccinations(event.target.value);\n  };\n\n  const clearAccountInfo = () => {\n    setEnteredName(\"\");\n    setEnteredDateOfBirth(\"\");\n    setEnteredEmailAddress(\"\");\n    setEnteredPassword(\"\");\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const accountInfo = {\n      name: enteredName,\n      dateOfBirth: new Date(enteredDateOfBirth),\n      email: enteredEmailAddress,\n      numVac: 0,\n      password: enteredPassword,\n      imageUrl: \"https://firebasestorage.googleapis.com/v0/b/vaccheck-6a24b.appspot.com/o/avatar_115.jpg?alt=media&token=75c1e503-8269-4e17-9e5f-4c1ac99e5801\",\n    };\n    console.log(accountInfo);\n    clearAccountInfo();\n    props.onSignup(accountInfo);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"\">\n        <div className=\"\">\n          <label>Full Name</label>\n          <input type=\"text\" value={enteredName} onChange={nameChangeHandler} />\n        </div>\n        <div className=\"\">\n          <label>Date of Birth</label>\n          <input\n            type=\"date\"\n            min=\"1900-1-1\"\n            max=\"2021-12-31\"\n            value={enteredDateOfBirth}\n            onChange={dateOfBirthChangeHandler}\n          />\n        </div>\n\n        <div>\n          <label>Email Address</label>\n          <input\n            type=\"email\"\n            value={enteredEmailAddress}\n            onChange={enteredEmailAddressChangeHandler}\n          />\n        </div>\n        <div>\n          <label>Password</label>\n          <input\n            type=\"password\"\n            value={enteredPassword}\n            onChange={enteredPasswordChangeHandler}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">Sign up</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonalUserForm;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBp1KweTccbGHPLHDXQMkJhikD0j4dZA_4\",\n  authDomain: \"vaccheck-6a24b.firebaseapp.com\",\n  projectId: \"vaccheck-6a24b\",\n  storageBucket: \"vaccheck-6a24b.appspot.com\",\n  messagingSenderId: \"685620451959\",\n  appId: \"1:685620451959:web:8b1946844a5c2dc1550472\",\n  measurementId: \"G-BG18CF3S0E\",\n};\n\nconst app = firebase.initializeApp(firebaseConfig);\nconst auth = app.auth();\nconst db = firebase.firestore();\nconst storage = firebase.storage();\nexport { auth, db, storage };\n","import { useState } from \"react\";\nimport AccountFilter from \"./AccountFilter\";\nimport BusinessForm from \"./BusinessForm\";\nimport HealthProfessionalForm from \"./HealthProfessionalForm\";\nimport PersonalUserForm from \"./PersonalUserForm\";\nimport { db, auth } from \"../../firebase\";\n\nconst SignupPage = (props) => {\n  const [accountType, setAccountType] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\"); //for error-case(email)\n  const [passwordError, setPasswordError] = useState(\"\"); //for error-case(password)Ï\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n  const userTypes = {\n    isPersonalUser: false,\n    isBusiness: false,\n    isHealthProfessional: false,\n  };\n\n  const selectAccountTypeHandler = (selectedAccountType) => {\n    setAccountType(selectedAccountType);\n  };\n\n  const createDoc = async (newAccountInfo) => {\n    db.collection(\"users\")\n      .doc(newAccountInfo.userId)\n      .set({\n        ...newAccountInfo,\n      });\n  };\n\n  const personalUserAccountSignupHandler = (personalUserAccountInfo) => {\n    createDoc({\n      ...personalUserAccountInfo,\n      userType: {\n        ...userTypes,\n        isPersonalUser: true,\n      },\n    });\n  };\n\n  const businessAccountSignupHandler = (businessAccountInfo) => {\n    const newAccountInfo = {\n      ...businessAccountInfo,\n      userType: {\n        ...userTypes,\n        isBusiness: true,\n      },\n    };\n    createDoc(newAccountInfo);\n  };\n\n  const healthProfessionalAccountSignupHandler = (\n    healthProfessionalAccountInfo\n  ) => {\n    const newAccountInfo = {\n      ...healthProfessionalAccountInfo,\n      userType: {\n        ...userTypes,\n        isHealthProfessional: true,\n      },\n    };\n    createDoc(newAccountInfo);\n  };\n\n  const handleSignup = (newAccountInfo) => {\n    console.log(newAccountInfo);\n    clearErrors();\n    auth\n      .createUserWithEmailAndPassword(\n        newAccountInfo.email,\n        newAccountInfo.password\n      )\n      .then((data) => {\n        delete newAccountInfo[\"password\"];\n        if (accountType === \"PersonalUser\") {\n          personalUserAccountSignupHandler({\n            ...newAccountInfo,\n            userId: data.user.uid\n          });\n        } else if (accountType === \"Business\") {\n          businessAccountSignupHandler({ ...newAccountInfo, userId: data.user.uid });\n        } else if (accountType === \"HealthProfessional\") {\n          healthProfessionalAccountSignupHandler({ ...newAccountInfo, userId: data.user.uid });\n        }\n        props.handleSignupSuccess()\n      })\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n          default:\n            break;\n        }\n      });\n  };\n\n  return (\n    <div>\n      <AccountFilter\n        select={accountType}\n        onSelectAccountType={selectAccountTypeHandler}\n      />\n      {accountType === \"PersonalUser\" && (\n        <PersonalUserForm onSignup={handleSignup} />\n      )}\n      {accountType === \"Business\" && (\n        <BusinessForm onSignup={handleSignup} />\n      )}\n      {accountType === \"HealthProfessional\" && (\n        <HealthProfessionalForm\n          onSignup={handleSignup}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SignupPage;\n","import { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { storage } from '../../firebase';\n\nconst UserInfoForm = forwardRef((props, ref) => {\n    const states = [\n        {\n          name: \"Alabama\",\n          abbreviation: \"AL\",\n        },\n        {\n          name: \"Alaska\",\n          abbreviation: \"AK\",\n        },\n        {\n          name: \"American Samoa\",\n          abbreviation: \"AS\",\n        },\n        {\n          name: \"Arizona\",\n          abbreviation: \"AZ\",\n        },\n        {\n          name: \"Arkansas\",\n          abbreviation: \"AR\",\n        },\n        {\n          name: \"California\",\n          abbreviation: \"CA\",\n        },\n        {\n          name: \"Colorado\",\n          abbreviation: \"CO\",\n        },\n        {\n          name: \"Connecticut\",\n          abbreviation: \"CT\",\n        },\n        {\n          name: \"Delaware\",\n          abbreviation: \"DE\",\n        },\n        {\n          name: \"District Of Columbia\",\n          abbreviation: \"DC\",\n        },\n        {\n          name: \"Federated States Of Micronesia\",\n          abbreviation: \"FM\",\n        },\n        {\n          name: \"Florida\",\n          abbreviation: \"FL\",\n        },\n        {\n          name: \"Georgia\",\n          abbreviation: \"GA\",\n        },\n        {\n          name: \"Guam\",\n          abbreviation: \"GU\",\n        },\n        {\n          name: \"Hawaii\",\n          abbreviation: \"HI\",\n        },\n        {\n          name: \"Idaho\",\n          abbreviation: \"ID\",\n        },\n        {\n          name: \"Illinois\",\n          abbreviation: \"IL\",\n        },\n        {\n          name: \"Indiana\",\n          abbreviation: \"IN\",\n        },\n        {\n          name: \"Iowa\",\n          abbreviation: \"IA\",\n        },\n        {\n          name: \"Kansas\",\n          abbreviation: \"KS\",\n        },\n        {\n          name: \"Kentucky\",\n          abbreviation: \"KY\",\n        },\n        {\n          name: \"Louisiana\",\n          abbreviation: \"LA\",\n        },\n        {\n          name: \"Maine\",\n          abbreviation: \"ME\",\n        },\n        {\n          name: \"Marshall Islands\",\n          abbreviation: \"MH\",\n        },\n        {\n          name: \"Maryland\",\n          abbreviation: \"MD\",\n        },\n        {\n          name: \"Massachusetts\",\n          abbreviation: \"MA\",\n        },\n        {\n          name: \"Michigan\",\n          abbreviation: \"MI\",\n        },\n        {\n          name: \"Minnesota\",\n          abbreviation: \"MN\",\n        },\n        {\n          name: \"Mississippi\",\n          abbreviation: \"MS\",\n        },\n        {\n          name: \"Missouri\",\n          abbreviation: \"MO\",\n        },\n        {\n          name: \"Montana\",\n          abbreviation: \"MT\",\n        },\n        {\n          name: \"Nebraska\",\n          abbreviation: \"NE\",\n        },\n        {\n          name: \"Nevada\",\n          abbreviation: \"NV\",\n        },\n        {\n          name: \"New Hampshire\",\n          abbreviation: \"NH\",\n        },\n        {\n          name: \"New Jersey\",\n          abbreviation: \"NJ\",\n        },\n        {\n          name: \"New Mexico\",\n          abbreviation: \"NM\",\n        },\n        {\n          name: \"New York\",\n          abbreviation: \"NY\",\n        },\n        {\n          name: \"North Carolina\",\n          abbreviation: \"NC\",\n        },\n        {\n          name: \"North Dakota\",\n          abbreviation: \"ND\",\n        },\n        {\n          name: \"Northern Mariana Islands\",\n          abbreviation: \"MP\",\n        },\n        {\n          name: \"Ohio\",\n          abbreviation: \"OH\",\n        },\n        {\n          name: \"Oklahoma\",\n          abbreviation: \"OK\",\n        },\n        {\n          name: \"Oregon\",\n          abbreviation: \"OR\",\n        },\n        {\n          name: \"Palau\",\n          abbreviation: \"PW\",\n        },\n        {\n          name: \"Pennsylvania\",\n          abbreviation: \"PA\",\n        },\n        {\n          name: \"Puerto Rico\",\n          abbreviation: \"PR\",\n        },\n        {\n          name: \"Rhode Island\",\n          abbreviation: \"RI\",\n        },\n        {\n          name: \"South Carolina\",\n          abbreviation: \"SC\",\n        },\n        {\n          name: \"South Dakota\",\n          abbreviation: \"SD\",\n        },\n        {\n          name: \"Tennessee\",\n          abbreviation: \"TN\",\n        },\n        {\n          name: \"Texas\",\n          abbreviation: \"TX\",\n        },\n        {\n          name: \"Utah\",\n          abbreviation: \"UT\",\n        },\n        {\n          name: \"Vermont\",\n          abbreviation: \"VT\",\n        },\n        {\n          name: \"Virgin Islands\",\n          abbreviation: \"VI\",\n        },\n        {\n          name: \"Virginia\",\n          abbreviation: \"VA\",\n        },\n        {\n          name: \"Washington\",\n          abbreviation: \"WA\",\n        },\n        {\n          name: \"West Virginia\",\n          abbreviation: \"WV\",\n        },\n        {\n          name: \"Wisconsin\",\n          abbreviation: \"WI\",\n        },\n        {\n          name: \"Wyoming\",\n          abbreviation: \"WY\",\n        }\n      ];\n\n\n    const allInputs = {imgUrl: ''};\n    const [imageAsFile, setImageAsFile] = useState('');\n    const [imageAsUrl, setImageAsUrl] = useState(allInputs);\n\n    const [imageUrl, setImageUrl] = useState((props.userData && props.userData.imageUrl) ? props.userData.imageUrl : \"\");\n    // const [enteredImageUrl, setEnteredImageUrl] = useState();\n    const [enteredName, setEnteredName] = useState((props.userData && props.userData.name) ? props.userData.name : \"\");\n    const [enteredDateOfBirth, setEnteredDateOfBirth] = useState((props.userData && props.userData.dateOfBirth) ? new Date(props.userData.dateOfBirth.toDate()).toISOString().split('T')[0] : \"\");\n    // const [enteredIdentityNumber, setEnteredIdentityNumber] = useState();\n    const [enteredEmailAddress, setEnteredEmailAddress] = useState(props.userData ? props.userData.email : \"\");\n    const [\n      enteredNumberOfVaccinations,\n      setEnteredNumberOfVaccinations,\n    ] = useState((props.userData && props.userData.numVac) ? props.userData.numVac : 0);\n    const [street1, setStreet1] = useState((props.userData && props.userData.address) ? props.userData.address.street1 : \"\");\n    const [street2, setStreet2] = useState((props.userData && props.userData.address) ? props.userData.address.street2 : \"\");\n    const [city, setCity] = useState((props.userData && props.userData.address) ? props.userData.address.city : \"\");\n    const [state, setState] = useState((props.userData && props.userData.address) ? props.userData.address.state : \"\");\n    const [postalCode, setPostalCode] = useState((props.userData && props.userData.address) ? props.userData.address.postalCode : \"\");\n\n    useEffect(() => {\n        setImageUrl(props.userData ? props.userData.imageUrl : \"\");\n        setEnteredName((props.userData && props.userData.name) ? props.userData.name : \"\");\n        setEnteredDateOfBirth((props.userData && props.userData.dateOfBirth) ? new Date(props.userData.dateOfBirth.toDate()).toISOString().split('T')[0] : null);\n        setEnteredEmailAddress(props.userData ? props.userData.email : \"\");\n        setEnteredNumberOfVaccinations((props.userData && props.userData.numVac) ? props.userData.numVac : 0);\n        setStreet1((props.userData && props.userData.address) ? props.userData.address.street1 : \"\");\n        setStreet2((props.userData && props.userData.address) ? props.userData.address.street2 : \"\");\n        setCity((props.userData && props.userData.address) ? props.userData.address.city : \"\");\n        setState((props.userData && props.userData.address) ? props.userData.address.state : \"\");\n        setPostalCode((props.userData && props.userData.address) ? props.userData.address.postalCode : \"\");\n    }, [props.userData]);\n\n    useImperativeHandle(ref, () => ({\n\n        updateImageUrl() {\n        storage.ref().child(imageAsFile.name).getDownloadURL()\n           .then(fireBaseUrl => {\n               setImageUrl(fireBaseUrl);\n           });\n        }\n    }));\n\n    const handleImageAsFile = (e) => {\n        const image = e.target.files[0];\n        console.log(image);\n        setImageAsFile(imageFile => (image));\n    }\n\n    const nameChangeHandler = (event) => {\n        setEnteredName(event.target.value);\n    };\n    \n    const dateOfBirthChangeHandler = (event) => {\n    setEnteredDateOfBirth(event.target.value);\n    };\n\n    // const identityNumberChangeHandler = (event) => {\n    // setEnteredIdentityNumber(event.target.value);\n    // };\n\n    const enteredEmailAddressChangeHandler = (event) => {\n    setEnteredEmailAddress(event.target.value);\n    };\n\n    const enteredNumberOfVaccinationsChangeHandler = (event) => {\n    setEnteredNumberOfVaccinations(parseInt(event.target.value));\n    };\n\n    const street1ChangeHandler = (event) => {\n    setStreet1(event.target.value);\n    };\n\n    const street2ChangeHandler = (event) => {\n    setStreet2(event.target.value);\n    };\n\n    const cityChangeHandler = (event) => {\n    setCity(event.target.value);\n    };\n\n    const stateChangeHandler = (event) => {\n    setState(event.target.value);\n    };\n\n    const postalCodeChangeHandler = (event) => {\n    setPostalCode(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        if(imageAsFile === '' ) {\n            console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\n        }\n\n        const uploadTask = storage.ref(`${imageAsFile.name}`).put(imageAsFile);\n\n        uploadTask.on('state_changed', \n        (snapShot) => {\n          //takes a snap shot of the process as it is happening\n          console.log(snapShot)\n        }, (err) => {\n          //catches the errors\n          console.log(err)\n        }, () => {\n          // gets the functions from storage refences the image storage in firebase by the children\n          // gets the download url then sets the image from firebase as the value for the imgUrl key:\n          storage.ref().child(imageAsFile.name).getDownloadURL()\n           .then(fireBaseUrl => {\n             setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}));\n             \n             const modifiedAccountInfo = {\n                name: enteredName,\n                dateOfBirth: new Date(enteredDateOfBirth),\n                email: enteredEmailAddress,\n                numVac: enteredNumberOfVaccinations,\n                imageUrl: fireBaseUrl,\n                address: {\n                  street1: street1,\n                  street2: street2,\n                  city: city,\n                  state: state,\n                  postalCode: postalCode\n                }\n              };\n            \n              props.onModifyPatient(modifiedAccountInfo);\n           })\n        })\n\n    }\n\n    return (\n    <form onSubmit={submitHandler}>\n        <div>\n            <img src={imageUrl} alt=\"avatar\"/>\n            <input type=\"file\" onChange={handleImageAsFile}></input>\n        </div>\n        <div className=\"\">\n            <label>Full Name</label>\n            <input type=\"text\" value={enteredName} onChange={nameChangeHandler} />\n        </div>\n        <div className=\"\">\n            <label>Date of Birth</label>\n            <input\n            type=\"date\"\n            min=\"1900-1-1\"\n            max=\"2021-12-31\"\n            value={enteredDateOfBirth}\n            onChange={dateOfBirthChangeHandler}\n            />\n        </div>\n\n        <div>\n            <label>Email Address</label>\n            <input\n            type=\"email\"\n            value={enteredEmailAddress}\n            onChange={enteredEmailAddressChangeHandler}\n            />\n        </div>\n\n        <div>\n            <label>Number of Vaccinations</label>\n            <input\n            type=\"number\"\n            value={enteredNumberOfVaccinations}\n            onChange={enteredNumberOfVaccinationsChangeHandler}\n            />\n        </div>\n        \n        <div className=\"\">\n            <label>Address</label>\n            <input\n                type=\"text\"\n                value={street1}\n                onChange={street1ChangeHandler}\n                placeholder=\"Street Address 1\"\n            />\n            <input\n                type=\"text\"\n                value={street2}\n                onChange={street2ChangeHandler}\n                placeholder=\"Street Address 2\"\n            />\n            <input\n                type=\"text\"\n                value={city}\n                onChange={cityChangeHandler}\n                placeholder=\"City\"\n            ></input>\n            <select value={state} onChange={stateChangeHandler}>\n                <option value=\"\" disabled selected>\n                State\n                </option>\n                {states.map((state) => (\n                <option value={state.abbreviation}>{state.name}</option>\n                ))}\n            </select>\n            <input\n                type=\"number\"\n                value={postalCode}\n                onChange={postalCodeChangeHandler}\n                placeholder=\"Postal Code\"\n            />\n        </div>\n\n        <div>\n            <button type=\"submit\">Modify Patient</button>\n        </div>\n\n    </form>\n    );\n\n});\n\nexport default UserInfoForm;","import { useContext, useEffect, useRef, useState } from \"react\";\nimport { auth, db } from \"../../firebase\";\nimport UserInfoForm from \"./UserInfoForm\";\n\nconst MainPage = (props) => {\n    const childRef = useRef();\n    const [currentUser, setCurrentUser] = useState();\n    const [enteredEmailAddress, setEnteredEmailAddress] = useState(\"\");\n    const [searchedUser, setSearchedUser] = useState();\n    const [searchedUserId, setSearchedUserId] = useState(\"\");\n    const [doesPatientExist, setDoesPatientExist] = useState();\n    const [isModificationSuccessful, setIsModificationSuccessful] = useState(false);\n\n    useEffect(() => {\n        auth.onAuthStateChanged((user) => {\n            db.collection(\"users\").where('email', '==', user.email).get().then(result => {\n                result.docs.forEach(doc => {\n                    setCurrentUser(doc.data());\n                })\n            });\n        })\n    }, []);\n\n    const enteredEmailAddressChangeHandler = (event) => {\n        setEnteredEmailAddress(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        auth.fetchSignInMethodsForEmail(enteredEmailAddress)\n        .then(providers => {\n            if (providers.length === 0) {\n                setSearchedUser(null);\n                setDoesPatientExist(false);\n                console.log('providers.length === 0');\n                console.log(enteredEmailAddress);\n                alert(\"User \" + enteredEmailAddress + \" does not exist\");\n            } else {\n                auth.onAuthStateChanged((user) => {\n                    db.collection(\"users\").where('email', '==', enteredEmailAddress).get().then(result => {\n                        result.docs.forEach(doc => {\n                            console.log('log searched user');\n                            console.log(doc.data());\n                            setSearchedUser(doc.data());\n                            setSearchedUserId(doc.id);\n                            setDoesPatientExist(true);\n                        })\n                    });\n                }) \n            }\n            \n        });\n        setIsModificationSuccessful(false);\n        \n    };\n\n    const handleModifiedPatient = (newPatientInfo) => {\n        db.collection(\"users\")\n        .doc(searchedUserId)\n        .set({\n          ...searchedUser,\n          ...newPatientInfo,\n        });\n        setIsModificationSuccessful(true);\n        childRef.current.updateImageUrl();\n    }\n\n    return (\n    <div>\n        <div>\n            <h1>VacCheck</h1>\n            <button onClick={props.handleLogout}>Sign Out</button>\n        </div>\n        <form onSubmit={submitHandler}>\n            <div>\n                <label>Email</label>\n                <input\n                type=\"email\"\n                value={enteredEmailAddress}\n                onChange={enteredEmailAddressChangeHandler}\n                />\n                <button type=\"submit\">Search</button>\n            </div>\n        </form>\n        {doesPatientExist === true && <UserInfoForm userData={searchedUser} onModifyPatient={handleModifiedPatient} ref={childRef}></UserInfoForm>}\n        {isModificationSuccessful && <div><p>Patient has been modified!</p></div>}\n    </div>);\n};\n\nexport default MainPage;","import React, { useState, useEffect, useContext } from \"react\";\nimport Login from \"./Login\";\nimport { BrowserRouter as Router, Route, useHistory } from \"react-router-dom\";\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport { auth, db } from \"../../firebase\";\nimport MainPage from \"../HealthProfessionalPage/MainPage\";\n\nconst UserInput = () => {\n  const history = useHistory();\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\"); //for error-case(email)\n  const [passwordError, setPasswordError] = useState(\"\"); //for error-case(password)\n  const [hasAccount, setHasAccount] = useState(false); //for switch in signin - login\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    auth.signInWithEmailAndPassword(email, password)\n    .then((user) => {\n      db.collection(\"users\").where('email', '==', email).get().then(result => {\n        result.docs.forEach(doc => {\n            if (doc.data().userType.isHealthProfessional) {\n              history.push(\"/healthprofessional\");\n            }\n        })\n      });\n    }).catch((err) => {\n      // catching errors\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleSignup = () => {\n    history.push(\"/SignupPage\");\n  };\n\n  const handleSignupSuccess = () => {\n    history.push(\"/\");\n  }\n\n  const handleLogOut = () => {\n    auth.signOut().then(function() {\n      console.log('Signed Out');\n    }, function(error) {\n      console.error('Sign Out Error', error);\n    });;\n  };\n\n  const authListener = () => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  return (\n    <div className=\"userinput\">\n      <switch>\n        <Route exact path=\"/healthprofessional\" component={MainPage}>\n          <MainPage handleLogOut={handleLogOut}/>\n        </Route>\n        <Route exact path=\"/\" component={Login}>\n          <Login //props for Login.\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassword={setPassword}\n            handleLogin={handleLogin}\n            handleSignup={handleSignup}\n            hasAccount={hasAccount}\n            setHasAccount={setHasAccount}\n            emailError={emailError}\n            passwordError={passwordError}\n          />\n        </Route>\n        <Route exact path=\"/SignupPage\" component={SignupPage}>\n          <SignupPage handleSignupSuccess={handleSignupSuccess}/>\n        </Route>\n      </switch>\n    </div>\n  );\n};\n\nexport default UserInput;\n","import \"./App.css\";\nimport UserInput from \"../src/components/LoginPage/UserInput\";\n\n\nconst App = () => {\n\n  return (\n    <div className=\"app\">\n      <UserInput />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}